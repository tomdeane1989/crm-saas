// prisma/schema.prisma

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// Core CRM models

model Company {
  id           Int           @id @default(autoincrement())
  name         String
  website      String?
  industry     String?
  customFields Json?         @db.JsonB
  contacts     Contact[]
  opportunities Opportunity[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

model Contact {
  id           Int       @id @default(autoincrement())
  company      Company   @relation(fields: [companyId], references: [id])
  companyId    Int
  firstName    String
  lastName     String
  email        String     @unique
  phone        String?
  customFields Json?      @db.JsonB
  activities   Activity[]
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
}

model Opportunity {
  id            Int       @id @default(autoincrement())
  company       Company   @relation(fields: [companyId], references: [id])
  companyId     Int
  title         String
  amount        Float?
  stage         String
  closeDate     DateTime?
  customFields  Json?     @db.JsonB
  activities    Activity[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Activity {
  id           Int       @id @default(autoincrement())
  contact      Contact?  @relation(fields: [contactId], references: [id])
  contactId    Int?
  opportunity  Opportunity? @relation(fields: [opportunityId], references: [id])
  opportunityId Int?
  type         String     // e.g. "call", "email", "meeting"
  occurredAt   DateTime
  notes        String?    @db.Text
  customFields Json?      @db.JsonB
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
}

// AI-related tables

model Embedding {
  id          Int      @id @default(autoincrement())
  entityType  String   // e.g. "Company", "Contact", "Opportunity", "Activity"
  entityId    Int
  model       String   // e.g. "openai-ada-002"
  vector      Json     @db.JsonB  // store embedding array here
  createdAt   DateTime @default(now())

  @@index([entityType, entityId])
  @@index([model])
}

model PromptLog {
  id          Int      @id @default(autoincrement())
  model       String   // model used for this prompt
  prompt      String   @db.Text
  response    String   @db.Text
  tokensUsed  Int
  createdAt   DateTime @default(now())

  @@index([createdAt])
}